using System.Linq;
using System.Collections.Generic;
using SimpleBT.Editor.GraphNodes;

[System.Serializable]
public class #SCRIPTNAME# : GraphAction
{
    public #SCRIPTNAME#()
    {
        Title = "#SCRIPTNAME#"; // Rename like: GraphAction_DoSomething -> Do Something
        ClassReference = "#SCRIPTNAME#"; // Rename like: GraphAction_DoSomething -> Action_DoSomething
    }

    public override void GenerateInterface()
    {
        base.GenerateInterface();
        
        // Add any custom interface after
    }

    public override List<string> GetValues()
    {
        // If your GraphAction requires keys return a new list like this:
        // return new List<string>() { value0, value1, ... }
        // If not leave it like this
        return null;
    }

    public override void ReloadValues(List<string> values)
    {
        // If your GraphAction requires to get values it must reload them as well
        // in the same order as you put the values on GetValues() like...
        // _textField.value = values[0]
        // _dropDownField.value = values[1]
        
        // If not you can leave this empty
    }
}
